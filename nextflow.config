/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    NorwegianVeterinaryInstitute/DPI Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/


nextflow.enable.dsl=2
DPIDIR="/home/vi2067/Documents/onedrive_sync/NEW_WORK/2_Projects/2023/1_2023_Lm_ost_er_ikke_ost/DPI"
SCRIPTDIR="/home/vi2067/Documents/onedrive_sync/NEW_WORK/2_Projects/2023/1_2023_Lm_ost_er_ikke_ost/DPI/bin/python/src"

params.input= "${DPIDIR}/assets/data/pairsheet_local.csv"
// Annotation options
//baktaDB         = "/run/media/evezeyl/4T/DATABASES/bakta/db" //cliff
//training    = "/run/media/evezeyl/4T/DATABASES/Listeria_monocytogenes.trn" //cliff
params.baktaDB         = "/mnt/blue/DATA/BIOINFO_LOCAL/bakta_database/db" //work
params.training        = "/mnt/blue/DATA/BIOINFO_LOCAL/Listeria_monocytogenes.trn" //work
params.genus           = "Listeria"
params.species         = "monocytogenes"
params.comment         = "'comments to add to db'" //  here problem if separated need to be in ' ' otherwise wont work



// temp 
params.out_dir         = "/home/vi2067/Documents/NOSYNC/NF_TEST"
params.prep_nucdiff    = "${SCRIPTDIR}/prep_nucdiff.py" 
params.prep_vcfannot   = "${SCRIPTDIR}/prep_vcf_annotator.py" 
params.results_to_db   = "${SCRIPTDIR}/results_to_db.py" 
params.sqlitedb        = "test3.sqlite"


//output parameters 
params.publish_dir_mode  = "copy"


// Global default params, used in configs
params{

	// Input
	input			= null

	// Annotation options
    baktaDB         = null
    trainingFILE    = null
    genus           = null
    species         = null
    
	// kmer_size		= "16"
	// fragment_length		= "3000"
	// min_fraction		= "0.2"

	// // General options
	// deduplicate		= false
	// filter_snps		= true
	time_multiplier		= 1
	publish_dir_mode	= "copy"
}

// Define profiles
profiles {
    conda {
        params.enable_conda    = true
        apptainer.enabled      = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        apptainer.enabled      = false
        params.enable_conda    = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        apptainer.enabled      = false
        params.enable_conda    = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    podman {
        podman.enabled         = true
        apptainer.enabled      = false
        params.enable_conda    = false
        docker.enabled         = false
        singularity.enabled    = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    shifter {
        shifter.enabled        = true
        apptainer.enabled      = false
        params.enable_conda    = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        charliecloud.enabled   = false
    }
    charliecloud {
        charliecloud.enabled   = true
        apptainer.enabled      = false
        params.enable_conda    = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
    }
    apptainer {
        apptainer.enabled      = true
        apptainer.autoMounts   = true
        singularity.enabled    = false
        params.enable_conda    = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }

    test_DPI{ includeConfig 'conf/test_DPI.config' }
    test_DPI_local{ includeConfig 'conf/test_DPI_local.config' }
    
    'pcwork' {
        includeConfig 'conf/pcwork_conda.config'
        conda.enabled   = true
    }

}

conda { createTimeout = "120 min" }

// Load config for module-specific options
includeConfig 'conf/base.config'
includeConfig 'conf/modules.config'

// Manifest
manifest {
    name            = 'NorwegianVeterinaryInstitute/DPI'
    author          = 'Eve Fiskebeck, HÃ¥kon Kaspersen'
    homePage        = 'https://github.com/NorwegianVeterinaryInstitute/DPI'
    description     = 'DPI: a Tool that reports Differences between Pairs of Isolates'
    mainScript      = 'main.nf'
    nextflowVersion = '!>=23.04.1'
    version         = '2.2.1'
}

// Define variables to prevent local R libraries from conflicting with the container
env {
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
}

// Function to ensure that resource requirements don't go beyond
// a maximum limit
// def check_max(obj, type) {
//     if (type == 'memory') {
//         try {
//             if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
//                 return params.max_memory as nextflow.util.MemoryUnit
//             else
//                 return obj
//         } catch (all) {
//             println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
//             return obj
//         }
//     } else if (type == 'time') {
//         try {
//             if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
//                 return params.max_time as nextflow.util.Duration
//             else
//                 return obj
//         } catch (all) {
//             println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
//             return obj
//         }
//     } else if (type == 'cpus') {
//         try {
//             return Math.min( obj, params.max_cpus as int )
//         } catch (all) {
//             println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
//             return obj
//         }
//     }
// }